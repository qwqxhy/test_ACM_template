#include<bits/stdc++.h>
using namespace std;

#define fr first
#define se second
#define et0 exit(0);
#define rep(i, a, b) for(int i = (int)(a); i <= (int)(b); i ++)
#define rrep(i, a, b) for(int i = (int)(a); i >= (int)(b); i --)
#define IO ios::sync_with_stdio(false),cin.tie(0);

typedef long long LL;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
typedef unsigned long long ULL;

const int INF = 0X3f3f3f3f, N = 1e6 + 10, MOD = 1e9 + 7;
const double eps = 1e-6, pi = acos(-1);

double P, Q, R;

struct point {
	double x, y;
}A, B, C, D;

double dis(double ax, double ay, double bx, double by) {
	return sqrt((bx - ax) * (bx - ax) + (by - ay) * (by - ay));
}

double calc(double Ex, double Ey) {
	double lx = C.x, ly = C.y, rx = D.x, ry = D.y;
	while (dis(lx, ly, rx, ry) > eps) {
		double dx = (rx - lx) / 3, dy = (ry - ly) / 3;
		double midlx = lx + dx, midly = ly + dy, midrx = rx - dx, midry = ry - dy;
		double resmidl = dis(midlx, midly, D.x, D.y) / Q + dis(midlx, midly, Ex, Ey) / R;
		double resmidr = dis(midrx, midry, D.x, D.y) / Q + dis(midrx, midry, Ex, Ey) / R;
		if (resmidl - resmidr < eps) rx = midrx, ry = midry;
		else lx = midlx, ly = midly; 
	}
	return dis(lx, ly, D.x, D.y) / Q + dis(lx, ly, Ex, Ey) / R;
}

void work() {
	cin >> A.x >> A.y >> B.x >> B.y >> C.x >> C.y >> D.x >> D.y >> P >> Q >> R;
	
	double lx = A.x, ly = A.y, rx = B.x, ry = B.y;
	while (dis(lx, ly, rx, ry) > eps) {
		double dx = (rx - lx) / 3, dy = (ry - ly) / 3;
		double midlx = lx + dx, midly = ly + dy, midrx = rx - dx, midry = ry - dy; 
		double resmidl = calc(midlx, midly) + dis(A.x, A.y, midlx, midly) / P;
		double resmidr = calc(midrx, midry) + dis(A.x, A.y, midrx, midry) / P;
		if (resmidl - resmidr < eps) rx = midrx, ry = midry;
		else lx = midlx, ly = midly;
	} 
	
	printf("%.2lf\n", calc(lx, ly) + dis(A.x, A.y, lx, ly) / P);
}

signed main() {
	IO

	int test = 1;

	while (test--) {
		work();
	}

	return 0;
}