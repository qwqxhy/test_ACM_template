#include<bits/stdc++.h>
using namespace std;

#define fr first
#define se second
#define et0 exit(0);
#define rep(i, a, b) for(int i = (int)(a); i <= (int)(b); i ++)
#define rrep(i, a, b) for(int i = (int)(a); i >= (int)(b); i --)
#define IO ios::sync_with_stdio(false),cin.tie(0);

typedef long long LL;
typedef pair<int, int> PII;
typedef pair<int, PII> PPI;
typedef unsigned long long ULL;

const int INF = 0X3f3f3f3f, N = 5e4 + 10, MOD = 1e9 + 7;
const double eps = 1e-7, pi = acos(-1);

int block;
int a[N], b[N];
LL res, ans[N];

struct QUES {
	int l, r, id;
	bool operator < (const QUES &t) const {
		if ((l - 1) / block == (t.l - 1) / block) return r < t.r;
		return l < t.l;
	}
} que[N];  

void del(int x) {
	res -= 2 * b[x] - 1;
	b[x]--;
}

void add(int x) {
	res += 2 * b[x] + 1;
	b[x]++;
}

void work() {
	int n, m, k;
	cin >> n >> m >> k;
	block = sqrt(n);
	rep (i, 1, n) cin >> a[i];
	rep (i, 1, m) cin >> que[i].l >> que[i].r, que[i].id = i;
	
	sort(que + 1, que + m + 1);
	
	int ql = 1, qr = 0;
	rep (i, 1, m) {
		int l = que[i].l, r = que[i].r;
		while (ql < l) del(a[ql]), ql++;
		while (ql > l) ql--, add(a[ql]);
		while (qr < r) qr++, add(a[qr]);
		while (qr > r) del(a[qr]), qr--;
		
		ans[que[i].id] = res;
	}
	
	rep (i, 1, m) cout << ans[i] << endl;
}

signed main() {
	IO

	int test = 1;

	while (test--) {
		work();
	}

	return 0;
}