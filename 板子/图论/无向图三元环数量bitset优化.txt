/*bitset优化
时间复杂度O(n^3 / 64)*/

#include<bits/stdc++.h>
using namespace std;

#define fr first
#define se second
#define et0 exit(0);
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define rrep(i,a,b) for(int i=a;i>=b;i--)

typedef long long LL;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
typedef unsigned long long ULL;

const int INF = 0X3f3f3f3f, N = 3000 + 10, MOD = 1e9 + 7;
const double eps = 1e-7;

int g[N][N];

bitset<N> bt[N];

void work() {
	int n;
	cin >> n;
	rep(i, 1, n)
	rep(j, 1, n) {
		char c;
		cin >> c;
		if (c == '1') g[i][j] = 1, bt[i][j] = 1;
	}

	LL res = 0;
	rep(i, 1, n)
	rep(j, i + 1, n)
	if (g[i][j]) res += (bt[i] & bt[j]).count();

	cout << res / 3;
}

signed main() {

	work();

	return 0;
}