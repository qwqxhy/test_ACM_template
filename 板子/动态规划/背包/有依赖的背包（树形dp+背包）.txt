#include<bits/stdc++.h>
using namespace std;

#define fr first
#define se second

typedef pair<int, int> PII;
typedef long long LL;
typedef unsigned long long ULL;

const int INF = 0X3f3f3f3f, N = 100 + 10, M = 3e4 + 10, MOD = 1e9 + 7;

int n, m;
int v[N], w[N];
int f[N][M];

vector<int> tr[N];

void dfs(int cur) {
	for (int i = m; i >= v[cur]; i--) f[cur][i] = w[cur];

	for (int i = 0; i < tr[cur].size(); i++) {
		int to = tr[cur][i];
		dfs(to);

		for (int j = m; j >= v[cur]; j--)
			for (int k = 0; k + v[cur] <= j; k++)
				f[cur][j] = max(f[cur][j], f[cur][j - k] + f[to][k]);
	}
}

void work() {
	int root;
	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		int a, b, c;
		cin >> a >> b >> c;
		v[i] = a, w[i] = b;
		if (c != -1) tr[c].push_back(i);
		else root = i;
	}
	dfs(root);
	cout << f[root][m];
}

signed main() {

	work();

	return 0;
}